server:
  port: 8080
#  ssl:
#    key-store-type: PKC512
#    key-store: classpath:edge.p12
#    key-store-password: password
#    key-alias: localhost
spring:
  cloud:
    gateway:
      routes:
        - id: authorization-server-login
          uri: http://authorization-server:9000
          predicates:
            - Path=/login/**  # ##              - Path=/resource
           # - Path=/oauth2/**
          filters:
            - TokenRelay=
            - RemoveRequestHeader=Cookie
        - id: authorization-server
          uri: http://authorization-server:9000
          predicates:
            #- Path=/login/**  # ##              - Path=/resource
            - Path=/oauth2/**
          filters:
            - TokenRelay=
            - RemoveRequestHeader=Cookie
        - id: swaggeruifull_api
          uri: http://resource-service:8090
          predicates:
              - Path=/v3/**  # ##              - Path=/resource
        - id: swaggeruifull_ui
          uri: http://resource-service:8090
          predicates:
            - Path=/swagger-ui/**  # ##              - Path=/resource
        #            - Path=/v3/**
        #          filters:
        #            - TokenRelay=
        #            - RemoveRequestHeader=Cookie

        - id: topic-web
          uri: http://topic-web:18071
          predicates:
            - Path=/topicsweb/**
        - id: directory-web
          uri: http://directory-web:18081
          predicates:
            - Path=/directoriesweb/**
        - id: post-web
          uri: http://post-web:18091
          predicates:
            - Path=/postsweb/**
  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: spring
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,resource.read
        provider:
          spring: # it is the oidc-provider
            issuer-uri: ${provider.issuer-uri} # ## was localhost:9000
      resourceserver:
        jwt:
          issuer-uri: ${app.auth-server}

#springdoc:
#  swagger-ui:
#    enabled: true
#    urls:
#      - name: Order Service
#        url: /topicsweb/v3/api-docs #http://localhost:18071/topicsweb/v3/api-docs
logging:
  level:
    root: INFO
    org.springframework.security: trace
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: trace
    org.springframework.security.oauth2: trace
eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.defaultZoneUrl} # http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
#    register-with-eureka: true
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5






