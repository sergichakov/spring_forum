server:
  application:
    name: topic-web
  port: 18071
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
  kafka:
    bootstrap-servers: ${kafka.bootstrap-servers}
    consumer:
      auto-offset-reset: earliest
      group-id: topic-web
  application: ######################
    name: topic-web

kafka:
  topic:
    product:
      request: topic-req-topic
      reply: topic-req-reply-topic
  request-reply:
    timeout-ms: 10000
eureka:
  client:
    serviceUrl:
      defaultZone: ${eureka.defaultZoneUrl} # http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
product:
  topic:
    request:
      numPartitions: 5
logging:
  level:
    root: info
springdoc:
  api-docs:
    path: /topicsweb/v3/api-docs
  swagger-ui:
    path: /topicsweb/
    url: /topicsweb/v3/api-docs

app:
  host-url: /
auth-server:
  get-jwk-link: "${jwt-key.link}"