package com.example.resourceserver.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.oauth2.jwt.JwtDecoder;
import org.springframework.security.oauth2.jwt.JwtDecoders;
import org.springframework.security.web.SecurityFilterChain;
@Configuration
@EnableWebSecurity
public class ResourceServerConfig {
    @Value("${spring.security.oauth2.resourceserver.jwt.issuer-uri}")
    String issuerUri;
    @Bean
    SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http.authorizeHttpRequests(auth-> {auth.requestMatchers("/resource/**").hasAuthority("SCOPE_resource.read");
                try {
                    auth.requestMatchers("/**").permitAll();
                    auth.requestMatchers("/resource/**").hasAuthority("SCOPE_resource.read")

                            .and().oauth2ResourceServer()
                            .jwt();
                }catch(Exception e){}
                //access("hasAuthority('SCOPE_resource.read')")

                });
                //.mvcMatchers("/resource/**")
                //.authorizeRequests()
                //.mvcMatchers("/resource/**")




        return http.build();
    }
    @Bean
    public JwtDecoder jwtDecoder() {
        return JwtDecoders.fromIssuerLocation(issuerUri);
    }
}